steps:
  - id: "generate-image-name"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "northamerica-northeast1-docker.pkg.dev/${PROJECT_ID}/app/app:$BRANCH_NAME-$SHORT_SHA-$(date +%s)" > /workspace/imagename

  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    dir: app
    args: 
      - "-c"
      - |
        image=$(cat /workspace/imagename)
        echo $image
        docker build -t $image .

  - id: "scan"
    name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        image=$(cat /workspace/imagename)
        echo $image
        gcloud artifacts docker images scan $image --format='value(response.scan)' > /workspace/scan_id.txt

  - id: "severity check"
    name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: /bin/bash
    args:
      - -c
      - |
        image=$(cat /workspace/imagename)
        echo $image
        gcloud artifacts docker images list-vulnerabilities $(cat /workspace/scan_id.txt) \
        --format='value(vulnerability.effectiveSeverity)' | if grep -Exq $_SEVERITY; \
        then echo 'Failed vulnerability check' && exit 1; else exit 0; fi

  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    dir: app
    args: 
      - "-c"
      - |
        image=$(cat /workspace/imagename)
        docker push $image
